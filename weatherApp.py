import sysfrom PyQt5 import QtWidgets, uicfrom util.helpers import *class weatherApp(QtWidgets.QMainWindow):    def __init__(self):        # initialize fixed sized weatherApp instance        super(weatherApp, self).__init__()        uic.loadUi('forms/mainWindow.ui', self).setFixedSize(800, 600)        # display correct days        self.labelToday.setText(getDay().strftime("%A"))        self.labelTomorrow.setText(getDay(daysFromNow=1).strftime("%A"))        self.labelDayAfter.setText(getDay(daysFromNow=2).strftime("%A"))        # call onClick function on button click        self.city = ''        self.submitCity.clicked.connect(self.onClick)    def displayWeather(self):        # display labels with current city temperature, weather description        currentTemp, tempMin, tempMax, weatherDesc, weatherDescGen = getCurrentWeather(self.city)        self.cityTemp.setText('{}℃'.format(currentTemp))        self.weatherDescription.setText(weatherDesc)        self.todaysForecastTemp.setText('{} / {}℃'.format(tempMin, tempMax))        self.todaysForecastDesc.setText(weatherDescGen)        # display tomorrow's forecast        tempMin, tempMax, weatherDesc = getWeatherForecastByDay(self.city, daysFromNow=1)        self.tomoForecastTemp.setText('{} / {}℃'.format(tempMin, tempMax))        self.tomoForecastDesc.setText(weatherDesc)        # display day after tomorrow's forecast        tempMin, tempMax, weatherDesc = getWeatherForecastByDay(self.city, daysFromNow=2)        self.dayAftersForecastTemp.setText('{} / {}℃'.format(tempMin, tempMax))        self.dayAftersForecastDesc.setText(weatherDesc)    def onClick(self):        # get weather report for given city        self.city = self.inputCity.text()        # 'invalid input' handling        if getCurrentWeather(self.city) is None:            QtWidgets.QMessageBox.about(self, "Can't reach weather report", "Please try again")        else:            # update window title with city name            self.setWindowTitle("weatherApp - {}".format(self.city))            # display weather forecast on weatherApp window            self.displayWeather()def main():    app = QtWidgets.QApplication([])    weatherAppWindow = weatherApp()    weatherAppWindow.show()    sys.exit(app.exec())if __name__ == '__main__':    main()